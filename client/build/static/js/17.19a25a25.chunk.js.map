{"version":3,"sources":["components/empty.js","components/posts.js"],"names":["useStyles","makeStyles","theme","empty","padding","marginLeft","marginRight","color","Empty","classes","_jsx","className","children","toast","configure","root","maxWidth","margin","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","main","border","marginTop","minHeight","background","position","left","width","top","zIndex","Posts","props","expanded","setExpanded","React","useState","anchorEl","setAnchorEl","anchorElCmt","setAnchorElCmt","inde","setInde","index","setIndex","index1","setIndex1","type","setType","_id","set_Id","read","setRead","comment","setComment","openNewComment","setOpenNewComment","email","useSelector","state","userReducer","dp","path","name","handleCloseNewComment","handleClose","handleCloseCmt","token","localStorage","getItem","dispatch","useDispatch","exist","postReducer","posts","post","readmore","ind","temp","JSON","parse","stringify","secureAxios","axios","baseURL","url","headers","Authorization","concat","useEffect","console","log","get","then","response","body","data","status","payload","history","replace","error","autoClose","catch","err","addComment","document","getElementById","value","commentData","content","reply","success","deleteComment","EditcommentDialog","_ref","newComment","setNewComment","_jsxs","Dialog","open","onClose","DialogTitle","id","DialogContent","TextField","autoFocus","label","onChange","evt","target","fullWidth","DialogActions","Button","onClick","editComment","showComments","uploaderEmail","cmnts","_Fragment","List","map","c","ListItem","ListItemAvatar","Avatar","src","PersonIcon","ListItemText","secondary","primary","ListItemSecondaryAction","IconButton","MoreVertIcon","handleClickCmt","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","bind","this","class","style","paddingLeft","SendIcon","float","hidePost","deletePost","likePost","liked","Fab","right","height","push","AddIcon","Container","component","CssBaseline","length","p","Card","CardHeader","uploaderDp","uploaderName","action","handleClick","title","subheader","date","CardContent","Typography","paragraph","desc","split","slice","join","Link","textDecoration","fontSize","includes","controls","CardActions","disableSpacing","ThumbUpAltIcon","likeCount","ShareIcon","textTransform"],"mappings":"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","file":"static/js/17.19a25a25.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    empty: {\r\n        padding: '10px 10px 40px 10px',\r\n        marginLeft: '30%',\r\n        marginRight: '30%',\r\n        color: '#848884'\r\n      }\r\n}))\r\n\r\nconst Empty = () => {\r\n    const classes = useStyles()\r\n    return <div className={classes.empty}>Nothing here yet!</div>\r\n}\r\n\r\nexport default Empty","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Empty from './empty'\r\nimport Header from \"./header\";\r\nimport url from \"../url\";\r\nimport axios from \"axios\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 500,\r\n    margin: \"10px auto 25px auto\",\r\n    padding: '10px'\r\n  },\r\n  media: {\r\n    paddingTop: \"100%\"\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"lightgrey\"\r\n  },\r\n  main: {\r\n    border: '1px solid black',\r\n    paddingTop: '30px',\r\n    marginTop: '45px',\r\n    marginLeft: '100px',\r\n    minHeight: '100vh',\r\n    background: 'linear-gradient(to right, #4682B4, #87CEEB)'\r\n  },\r\n  empty: {\r\n    position: 'fixed',\r\n    left: '25%',\r\n    width: '100%',\r\n    top: '50vh',\r\n    zIndex: '1'\r\n  }\r\n}));\r\n\r\nexport default function Posts(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorElCmt, setAnchorElCmt] = React.useState(null);\r\n\r\n  const [inde, setInde] = React.useState(0);\r\n  const [index, setIndex] = React.useState(0);\r\n  const [index1, setIndex1] = React.useState(0);\r\n  const [type, setType] = React.useState(\"\");\r\n  const [_id, set_Id] = React.useState(\"\");\r\n\r\n  const [read, setRead] = React.useState({});\r\n  const [comment, setComment] = React.useState(null);\r\n  const [openNewComment, setOpenNewComment] = React.useState(false);\r\n\r\n  const email = useSelector((state) => state.userReducer.email);\r\n  const dp = useSelector((state) => state.userReducer.path);\r\n  const name = useSelector((state) => state.userReducer.name);\r\n\r\n  const handleOpenNewComment = () => {\r\n    setOpenNewComment(true);\r\n  };\r\n  const handleCloseNewComment = () => {\r\n    setOpenNewComment(false);\r\n  };\r\n\r\n  const handleClick = (event, ind) => {\r\n    setInde(ind);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickCmt = (event, type, _id, index1, index, comment) => {\r\n    setIndex(index);\r\n    setIndex1(index1);\r\n    set_Id(_id);\r\n    setType(type);\r\n    setComment(comment);\r\n\r\n    setAnchorElCmt(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseCmt = () => {\r\n    setAnchorElCmt(null);\r\n  };\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n  const exist = useSelector((state) => state.postReducer.exist);\r\n  const posts = useSelector((state) => state.postReducer.post);\r\n\r\n  const readmore = (ind) => {\r\n    if (!read[ind]) {\r\n      let temp = JSON.parse(JSON.stringify(read));\r\n      temp[ind] = true;\r\n      setRead(temp);\r\n    } else {\r\n      let temp = JSON.parse(JSON.stringify(read));\r\n      temp[ind] = false;\r\n      setRead(temp);\r\n    }\r\n  };\r\n\r\n  const secureAxios = axios.create({\r\n    baseURL: url,\r\n    headers: {\r\n      Authorization: `bearer ${token}`\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(posts);\r\n    if (exist) return;\r\n\r\n    secureAxios\r\n      .get(\"getPost\")\r\n      .then((response) => {\r\n        const body = response.data;\r\n\r\n        if (body.status == 1) {\r\n          dispatch({ type: \"load_post\", payload: body.post });\r\n\r\n          props.history.replace(\"/\");\r\n        } else toast.error(\"Something went wrong\", { autoClose: 1000 });\r\n      })\r\n      .catch((err) => toast.error(\"Something went wrong\", { autoClose: 1000 }));\r\n  }, []);\r\n\r\n  const addComment = (type, _id, index) => {\r\n    let comment = \"\";\r\n    if (type === \"comment\") {\r\n      comment = document.getElementById(_id).value;\r\n      document.getElementById(_id).value = \"\";\r\n    } else {\r\n      comment = document.getElementById(_id + index).value;\r\n      document.getElementById(_id + index).value = \"\";\r\n    }\r\n    if (comment === \"\") return;\r\n\r\n    const commentData = { name, email, path: dp, content: comment, reply: [] };\r\n\r\n    secureAxios\r\n      .post(\"addComment\", { _id, type, comment: commentData, index })\r\n      .then((response) => {\r\n        const body = response.data;\r\n        if (body.status == 1) {\r\n          dispatch({\r\n            type: `add_${type}`,\r\n            payload: { _id, comment: commentData, index }\r\n          });\r\n          toast.success(`Your ${type} was added`, { autoClose: 1000 });\r\n        } else toast.error(\"Something went wrong\", { autoClose: 2000 });\r\n      })\r\n      .catch((err) =>\r\n        toast.error(\"Something went wrong \" + err, { autoClose: 2000 })\r\n      );\r\n  };\r\n\r\n  const editComment = (type, _id, index1, index, comment) => {\r\n    const commentData = { name, email, path: dp, content: comment, reply: [] };\r\n\r\n    secureAxios\r\n      .post(\"editComment\", { type, _id, index1, index, commentData })\r\n      .then((response) => {\r\n        const body = response.data;\r\n        if (body.status == 1) {\r\n          dispatch({\r\n            type: `edit_${type}`,\r\n            payload: { _id, index1, index, commentData }\r\n          });\r\n          toast.success(`Your ${type} was edited`, { autoClose: 1000 });\r\n        } else toast.error(\"Something went wrong\", { autoClose: 2000 });\r\n      })\r\n      .catch((err) =>\r\n        toast.error(\"Something went wrong \" + err, { autoClose: 2000 })\r\n      );\r\n  };\r\n\r\n  const deleteComment = () => {\r\n    secureAxios\r\n      .post(\"deleteComment\", { type, _id, index1, index })\r\n      .then((response) => {\r\n        const body = response.data;\r\n        if (body.status == 1) {\r\n          dispatch({ type: `delete_${type}`, payload: { _id, index1, index } });\r\n          toast.success(`Your ${type} was deleted`, { autoClose: 1000 });\r\n        } else toast.error(\"Something went wrong\", { autoClose: 2000 });\r\n      })\r\n      .catch((err) =>\r\n        toast.error(\"Something went wrong \" + err, { autoClose: 2000 })\r\n      );\r\n    handleCloseCmt();\r\n  };\r\n\r\n  function EditcommentDialog({ comment }) {\r\n    const [newComment, setNewComment] = useState(comment);\r\n\r\n    return (\r\n      <Dialog\r\n        open={openNewComment}\r\n        onClose={handleCloseNewComment}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Write comment\"\r\n            value={newComment}\r\n            onChange={(evt) => setNewComment(evt.target.value)}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleCloseCmt();\r\n              handleCloseNewComment();\r\n              setNewComment(\"\");\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              editComment(type, _id, index1, index, newComment);\r\n              handleCloseCmt();\r\n              handleCloseNewComment();\r\n              setNewComment(\"\");\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  const showComments = (uploaderEmail, _id, cmnts, type, index) => {\r\n    return (\r\n      <>\r\n        <List>\r\n          {cmnts?.map((c, index1) => {\r\n            return (\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar src={url + `/uploads/${c.path}/${token}`}>\r\n                    <PersonIcon color=\"lightgrey\" />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText secondary={c.content} primary={c.name} />\r\n\r\n                <ListItemSecondaryAction>\r\n                  {type === \"comment\" ? (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      data-toggle=\"collapse\"\r\n                      data-target={\"#reply\" + _id + index1}\r\n                    >\r\n                      Reply\r\n                    </Button>\r\n                  ) : null}\r\n                  <>\r\n                    <IconButton aria-label=\"settings\">\r\n                      <MoreVertIcon\r\n                        onClick={(evt) =>\r\n                          handleClickCmt(\r\n                            evt,\r\n                            type,\r\n                            _id,\r\n                            index1,\r\n                            index,\r\n                            c.content\r\n                          )\r\n                        }\r\n                      />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                      id=\"simple-menu-comment\"\r\n                      anchorEl={anchorElCmt}\r\n                      keepMounted\r\n                      open={Boolean(anchorElCmt)}\r\n                      onClose={handleCloseCmt}\r\n                    >\r\n                      {email === c.email ? (\r\n                        <MenuItem\r\n                          onClick={() => {\r\n                            handleOpenNewComment();\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </MenuItem>\r\n                      ) : null}\r\n                      {email === c.email && email === uploaderEmail ? (\r\n                        <MenuItem onClick={deleteComment.bind(this)}>\r\n                          Delete\r\n                        </MenuItem>\r\n                      ) : null}\r\n                    </Menu>\r\n                  </>\r\n                </ListItemSecondaryAction>\r\n                <br />\r\n                <br />\r\n                {type === \"comment\" ? (\r\n                  <ListItemSecondaryAction\r\n                    id={\"reply\" + _id + index1}\r\n                    class=\"collapse\"\r\n                    style={{ paddingLeft: \"50px\" }}\r\n                  >\r\n                    {showComments(uploaderEmail, _id, c.reply, \"reply\", index1)}\r\n                  </ListItemSecondaryAction>\r\n                ) : null}\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <>\r\n          {type === \"reply\" ? (\r\n            <>\r\n              <TextField\r\n                label={`Add a reply`}\r\n                id={_id + index}\r\n                style={{ marginLeft: \"5px\", width: \"92%\" }}\r\n              />\r\n              <SendIcon\r\n                color=\"secondary\"\r\n                style={{ float: \"right\", marginTop: \"15px\" }}\r\n                onClick={() => addComment(\"reply\", _id, index)}\r\n              />\r\n            </>\r\n          ) : null}\r\n          <br />\r\n        </>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const hidePost = (index) => {\r\n    const _id = posts[index]._id;\r\n    dispatch({ type: \"hide_post\", payload: _id });\r\n    handleClose();\r\n  };\r\n\r\n  const deletePost = (email, index) => {\r\n    const _id = posts[index]._id;\r\n\r\n    const secureAxios = axios.create({\r\n      baseURL: url,\r\n      headers: {\r\n        Authorization: `bearer ${token}`\r\n      }\r\n    });\r\n    secureAxios\r\n      .post(\"deletePost\", { email, _id })\r\n      .then((response) => {\r\n        const body = response.data;\r\n\r\n        if (body.status == 1) {\r\n          dispatch({ type: \"hide_post\", payload: _id });\r\n          toast.success(\"Post was deleted\", { autoClose: 1500 });\r\n        } else toast.error(\"Something went wrong\", { autoClose: 1000 });\r\n      })\r\n      .catch((err) => toast.error(\"Something went wrong\", { autoClose: 1000 }));\r\n    handleClose();\r\n  };\r\n\r\n  const likePost = (email, _id, liked) => {\r\n    dispatch({ type: \"like_post\", payload: { _id, liked } });\r\n\r\n    const secureAxios = axios.create({\r\n      baseURL: url,\r\n      headers: {\r\n        Authorization: `bearer ${token}`\r\n      }\r\n    });\r\n    secureAxios\r\n      .post(\"likePost\", { email, _id, liked })\r\n      .then((response) => {\r\n        const body = response.data;\r\n\r\n        if (body.status == 1) {\r\n        } else toast.error(\"Something went wrong\", { autoClose: 1000 });\r\n      })\r\n      .catch((err) => toast.error(\"Something went wrong\", { autoClose: 1000 }));\r\n  };\r\n\r\n  console.log('posts', posts)\r\n  return (\r\n      <div class={classes.main}>\r\n        <Fab\r\n          color=\"primary\"\r\n          style={{ position: 'fixed', right: 10, top: '92vh', height: \"45px\", width: \"45px\", zIndex: '1', float: \"right\" }}\r\n          aria-label=\"New Room\"\r\n          onClick={() => props.history.push(\"/uploadpost\")}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Container component=\"main\" maxWidth=\"xl\" >\r\n          <CssBaseline />\r\n          {\r\n            !!posts?.length ? posts.map((p, ind) => {\r\n            return (\r\n              <Card className={classes.root}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"recipe\"\r\n                      className={classes.avatar}\r\n                      src={`${url}/uploads/${p.uploaderDp}/${token}`}\r\n                      onClick={() =>\r\n                        props.history.push(\r\n                          `/profile/${p.uploaderEmail}-${p.uploaderName}`\r\n                        )\r\n                      }\r\n                    ></Avatar>\r\n                  }\r\n                  action={\r\n                    <>\r\n                      <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon\r\n                          onClick={(evt) => handleClick(evt, ind)}\r\n                        />\r\n                      </IconButton>\r\n                      <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                      >\r\n                        <MenuItem onClick={hidePost.bind(this, inde)}>\r\n                          Hide\r\n                        </MenuItem>\r\n                        {email === posts[inde].uploaderEmail ? (\r\n                          <MenuItem\r\n                            onClick={deletePost.bind(this, email, inde)}\r\n                          >\r\n                            Delete\r\n                          </MenuItem>\r\n                        ) : null}\r\n                      </Menu>\r\n                    </>\r\n                  }\r\n                  title={p.uploaderName}\r\n                  subheader={p.date}\r\n                />\r\n                <CardContent>\r\n                  <Typography paragraph>\r\n                    {p.desc.split(\" \").length <= 30\r\n                      ? p.desc\r\n                      : read[ind]\r\n                      ? p.desc\r\n                      : p.desc.split(\" \").slice(0, 30).join(\" \")}\r\n                    &nbsp;&nbsp;\r\n                    {p.desc.split(\" \").length > 30 ? (\r\n                      <Link\r\n                        style={{ textDecoration: \"none\", fontSize: \"15px\" }}\r\n                        onClick={readmore.bind(this, ind)}\r\n                      >\r\n                        {!read[ind] ? \"read more\" : \"read less\"}\r\n                      </Link>\r\n                    ) : null}\r\n                  </Typography>\r\n                </CardContent>\r\n                {p.path != \"undefined\" &&\r\n                (p.path.includes(\".jpg\") ||\r\n                  p.path.includes(\".png\") ||\r\n                  p.path.includes(\".jpeg\")) ? (\r\n                  <img\r\n                    src={`${url}/uploads/${p.path}/${token}`}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                ) : p.path != \"undefined\" &&\r\n                  (p.path.includes(\".mp4\") ||\r\n                    p.path.includes(\".wav\") ||\r\n                    p.path.includes(\".ogg\")) ? (\r\n                  <video width=\"100%\" height=\"100%\" controls>\r\n                    <source\r\n                      src={url + `/uploads/${p.path}/${token}`}\r\n                      type=\"video/mp4\"\r\n                    />\r\n                    <source\r\n                      src={url + `/uploads/${p.path}/${token}`}\r\n                      type=\"video/wav\"\r\n                    />\r\n                    <source\r\n                      src={url + `/uploads/${p.path}/${token}`}\r\n                      type=\"video/ogg\"\r\n                    />\r\n                  </video>\r\n                ) : null}\r\n\r\n                <CardActions disableSpacing>\r\n                  <IconButton aria-label=\"add to favorites\">\r\n                    <ThumbUpAltIcon\r\n                      onClick={likePost.bind(this, email, p._id, p.liked)}\r\n                      color={p.liked ? \"Primary\" : \"\"}\r\n                    />\r\n                  </IconButton>{\" \"}\r\n                  {p.likeCount}\r\n                  <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n\r\n                <CardContent>\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target={\"#reply\" + p._id}\r\n                    style={{\r\n                      textTransform: \"none\",\r\n                      float: \"right\",\r\n                      marginTop: \"-67px\",\r\n                      fontSize: \"17px\"\r\n                    }}\r\n                  >\r\n                    Comments\r\n                  </Button>\r\n                </CardContent>\r\n                <CardContent\r\n                  id={\"reply\" + p._id}\r\n                  class=\"collapse\"\r\n                  style={{ marginTop: \"-30px\" }}\r\n                >\r\n                  {showComments(p.uploaderEmail, p._id, p.comment, \"comment\")}\r\n                </CardContent>\r\n                <TextField\r\n                  label={`Add a comment`}\r\n                  id={p._id}\r\n                  style={{\r\n                    width: \"92%\",\r\n                    marginLeft: \"5px\",\r\n                    marginTop: \"-20px\"\r\n                  }}\r\n                />\r\n                <SendIcon\r\n                  color=\"secondary\"\r\n                  style={{ float: \"right\", marginTop: \"0px\" }}\r\n                  onClick={() => addComment(\"comment\", p._id)}\r\n                />\r\n              </Card>\r\n            );\r\n          }) : <div className={classes.empty}>\r\n            <Empty />\r\n        </div>}\r\n        </Container>\r\n        <EditcommentDialog {...{ comment }} />\r\n      </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}